@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ottr: <http://ns.ottr.xyz/0.4/> .
@prefix core: <http://w3id.org/sepses/vocab/log/core#> .
@prefix slog: <http://w3id.org/sepses/vocab/log/slogert#> .
@prefix sid: <http://w3id.org/sepses/slogert-id/> .
@prefix id: <http://w3id.org/sepses/id/> .
@prefix ottr: <http://ns.ottr.xyz/0.4/> .
@prefix core: <http://w3id.org/sepses/vocab/log/core#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix sid: <http://w3id.org/sepses/slogert-id/> .
@prefix slog: <http://w3id.org/sepses/vocab/log/slogert#> .

# Default logline
id:LogLine[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash] :: {
    id:BasicLog(?id, ?timeStamp, ?message, ?templateHash)
} .

# Basic templates
id:BasicLog[ottr:IRI ?id, xsd:dateTime ?timeStamp, xsd:string ?message, xsd:string ?templateHash] :: {
    ottr:Triple(?id, core:timestamp, ?timeStamp),
    ottr:Triple(?id, core:logMessage, ?message),
    ottr:Triple(?id, slog:templateId, ?templateHash),
    ottr:Triple(?id, rdf:type, core:Log)
} .

id:UnknownConnection[ottr:IRI ?id, xsd:string ?value] :: {
    ottr:Triple(?id, slog:contained, ?value)
} .

# *** YAML Generated Templates ***

# log-specific OTTR parameter: Type
id:Type[ottr:IRI ?id, ottr:IRI ?value] :: {
	 ottr:Triple(?id, slog:hostName, ?value)
} .
# log-specific OTTR parameter: Component
id:Component[ottr:IRI ?id, xsd:string ?value] :: {
	 ottr:Triple(?id, slog:localPid, ?value)
} .
# OTTR ner parameter: ip
id:ip[ottr:IRI ?id, ottr:IRI ?value] :: {
	 ottr:Triple(?id, slog:containedIp, ?value)
} .
# OTTR ner parameter: port
id:port[ottr:IRI ?id, ottr:IRI ?value] :: {
	 ottr:Triple(?id, slog:containedPort, ?value)
} .
# OTTR ner parameter: url
id:url[ottr:IRI ?id, ottr:IRI ?value] :: {
	 ottr:Triple(?id, slog:containedURL, ?value)
} .
# OTTR ner parameter: domain
id:domain[ottr:IRI ?id, ottr:IRI ?value] :: {
	 ottr:Triple(?id, slog:containedDomain, ?value)
} .
# OTTR ner parameter: user
id:user[ottr:IRI ?id, ottr:IRI ?value] :: {
	 ottr:Triple(?id, slog:containedUser, ?value)
} .
# OTTR non-ner parameter: path
id:path[ottr:IRI ?id, xsd:string ?value] :: {
	 ottr:Triple(?id, slog:containedPath, ?value)
} .
# OTTR non-ner parameter: fileName
id:fileName[ottr:IRI ?id, xsd:string ?value] :: {
	 ottr:Triple(?id, slog:containedFileName, ?value)
} .
# OTTR non-ner parameter: filePath
id:filePath[ottr:IRI ?id, xsd:string ?value] :: {
	 ottr:Triple(?id, slog:containedFileName, ?value)
} .

# *** LogPai-Generated Templates ***
