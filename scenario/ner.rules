# make all patterns case-sensitive
ENV.defaultStringMatchFlags = 0
ENV.defaultStringPatternFlags = 0

# these Java classes will be used by the rules
ner = { type: "CLASS", value: "edu.stanford.nlp.ling.CoreAnnotations$NamedEntityTagAnnotation" }
tokens = { type: "CLASS", value: "edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation" }

{ ruleType: "tokens", pattern: ([{word:/(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/}]), action: Annotate($0, ner, "ip"), result: "Ip" }
{ ruleType: "tokens", pattern: ([{word:/port/}] + ([{word:/(\d{1,5})/}])), action: Annotate($1, ner, "port"), result: "Port" }
{ ruleType: "tokens", pattern: ([{word:/(https?|ftp|file):\/\/[-a-zA-Z0-9+&@#\/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#\/%=~_|]/}]), action: Annotate($0, ner, "url"), result: "Url" }
{ ruleType: "tokens", pattern: ([{word:/((?!-)[A-Za-z0-9-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}/}]), action: Annotate($0, ner, "domain"), result: "Domain" }
{ ruleType: "tokens", pattern: ([{word:/user/}]+ [{word:/:|-|=|\s/}]? ([{word:/(\w+)/}])), action: Annotate($1, ner, "user"), result: "User" }
