##
# - these nerParameters will be used to generate both OTTR template and Stanford RegexNER rules.
##

nerParameters:
  - id: ip
    label: Ip
    comment: An Internet Protocol address (IP address) is a numerical label assigned to each device connected to a computer network that uses the Internet Protocol for communication
    example: 192.168.0.1
    ottr:
      ottrPrefix: sid
      ottrType: xsd:string
      ottrProperty: slog:containedIp
    regexNer:
      pattern: ([{word:/(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/}])
      action: Annotate($0, ner, "ip")
  - id: port
    label: Port
    comment: In computer networking, a port is a communication endpoint. Ports are identified for each protocol and address combination by 16-bit unsigned numbers, commonly known as the port number.
    example: 8080
    ottr:
      ottrPrefix: sid
      ottrType: xsd:string
      ottrProperty: slog:containedPort
    regexNer:
      pattern: ([{word:/port/}] + ([{word:/(\d{1,5})/}]))
      action: Annotate($1, ner, "port")
  - id: url
    label: Url
    comment: A Uniform Resource Locator (URL), colloquially termed a web address, is a reference to a web resource that specifies its location on a computer network and a mechanism for retrieving it.
    example: http://semantics.id
    ottr:
      ottrPrefix: sid
      ottrType: xsd:string
      ottrProperty: slog:containedURL
    regexNer:
      pattern: ([{word:/(https?|ftp|file):\/\/[-a-zA-Z0-9+&@#\/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#\/%=~_|]/}])
      action: Annotate($0, ner, "url")
  - id: domain
    label: Domain
    comment: A domain name is an identification string that defines a realm of administrative autonomy, authority or control within the Internet.
    example: semantics.id
    ottr:
      ottrPrefix: sid
      ottrType: xsd:string
      ottrProperty: slog:containedDomain
    regexNer:
      pattern: ([{word:/((?!-)[A-Za-z0-9-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}/}])
      action: Annotate($0, ner, "domain")
  - id: user
    label: User
    comment: A user is a person who utilizes a computer or network service.
    example: fajar
    ottr:
      ottrPrefix: sid
      ottrType: xsd:string
      ottrProperty: slog:containedUser
    regexNer:
      pattern: ([{word:/user/}]+ [{word:/:|-|=|\s/}]? ([{word:/(\w+)/}]))
      action: Annotate($1, ner, "user")
nonNerParameters:
  - id: path
    label: Path
    comment: generic path
    example: /fajar/test
    ottr:
      ottrPrefix:
      ottrType: xsd:string
      ottrProperty: slog:containedPath
    regexNer:
      pattern: "/[a-zA-Z0-9-_/]+"
      action:
  - id: fileName
    label: FileName
    comment: file name
    example: fajar.exe
    ottr:
      ottrPrefix:
      ottrType: xsd:string
      ottrProperty: slog:containedFileName
    regexNer:
      pattern: "[a-zA-Z0-9-_]+\\.[a-zA-Z]+"
      action:
  - id: filePath
    label: FilePath
    comment: file name
    example: /fajar/test/test.txt
    ottr:
      ottrPrefix:
      ottrType: xsd:string
      ottrProperty: slog:containedFileName
    regexNer:
      pattern: "[a-zA-Z0-9-_/]+\\.[a-zA-Z]+"
      action:

##
# - these namespaces will be written in both ottr templates and instances
# - you should put in all prefixes that you use in nerParameters above
##

ottrNS:
  - prefix: rdf
    uri: http://www.w3.org/1999/02/22-rdf-syntax-ns#
  - prefix: rdfs
    uri: http://www.w3.org/2000/01/rdf-schema#
  - prefix: owl
    uri: http://www.w3.org/2002/07/owl#
  - prefix: xsd
    uri: http://www.w3.org/2001/XMLSchema#
  - prefix: ottr
    uri: http://ns.ottr.xyz/0.4/
  - prefix: core
    uri: http://w3id.org/sepses/vocab/log/core#
  - prefix: slog
    uri: http://w3id.org/sepses/vocab/log/slogert#
  - prefix: sid
    uri: http://w3id.org/sepses/slogert-id/
  - prefix: id
    uri: http://w3id.org/sepses/id/
