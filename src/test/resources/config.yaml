##
# -- SLOGERT Configuration File --
##

logType: unix
logData: src/test/resources/authlog_structured.csv
logTemplate: src/test/resources/authlog_templates.csv
logBaseTemplate: src/test/resources/base_templates.csv
isOverride: true

targetTemplate: authlog_templates.ottr
targetData: authlog_structured.ottr
targetNer: constructed-ner.rules
targetOttr: constructed-unix.stottr
targetTurtle: final-output.ttl

##
# - these parameters will be used to generate both OTTR template and Stanford RegexNER rules.
##
parameters:
  - label: Ip
    comment: An Internet Protocol address (IP address) is a numerical label assigned to each device connected to a computer network that uses the Internet Protocol for communication
    example: 192.168.0.1
    ottr:
      ottrPrefix: sid
      ottrType: ottr:IRI
      ottrProperty: core:connectedIp
    regexNer:
      pattern: ([{word:/(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/}])
      action: Annotate($0, ner, "Ip")
  - label: Port
    comment: In computer networking, a port is a communication endpoint. Ports are identified for each protocol and address combination by 16-bit unsigned numbers, commonly known as the port number.
    example: 8080
    ottr:
      ottrPrefix: sid
      ottrType: ottr:IRI
      ottrProperty: core:connectedPort
    regexNer:
      pattern: ([{word:/port/}] + ([{word:/(\d+)/}]))
      action: Annotate($1, ner, "Port")
  - label: Url
    comment: A Uniform Resource Locator (URL), colloquially termed a web address, is a reference to a web resource that specifies its location on a computer network and a mechanism for retrieving it.
    example: http://semantics.id
    ottr:
      ottrPrefix: sid
      ottrType: ottr:IRI
      ottrProperty: core:connectedURL
    regexNer:
      pattern: ([{word:/(https?|ftp|file):\/\/[-a-zA-Z0-9+&@#\/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#\/%=~_|]/}])
      action: Annotate($0, ner, "Url")
  - label: Domain
    comment: A domain name is an identification string that defines a realm of administrative autonomy, authority or control within the Internet.
    example: semantics.id
    ottr:
      ottrPrefix: sid
      ottrType: ottr:IRI
      ottrProperty: core:connectedDomain
    regexNer:
      pattern: ([{word:/((?!-)[A-Za-z0-9-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}/}])
      action: Annotate($0, ner, "Domain")
  - label: User
    comment: A user is a person who utilizes a computer or network service.
    example: fajar
    ottr:
      ottrPrefix: sid
      ottrType: ottr:IRI
      ottrProperty: core:connectedUser
    regexNer:
      pattern: ([{word:/user/}]+ [{word:/:|-|=|\s/}]? ([{word:/(\w+)/}]))
      action: Annotate($1, ner, "User")

##
# - these namespaces will be written in both ottr templates and instances
# - you should put in all prefixes that you use in parameters above
##
ottrNS:
  - prefix: rdf
    uri: http://www.w3.org/1999/02/22-rdf-syntax-ns#
  - prefix: rdfs
    uri: http://www.w3.org/2000/01/rdf-schema#
  - prefix: owl
    uri: http://www.w3.org/2002/07/owl#
  - prefix: xsd
    uri: http://www.w3.org/2001/XMLSchema#
  - prefix: ottr
    uri: http://ns.ottr.xyz/0.4/
  - prefix: core
    uri: http://w3id.org/sepses/vocab/log/core#
  - prefix: slog
    uri: http://w3id.org/sepses/vocab/log/slogert#
  - prefix: sid
    uri: http://w3id.org/sepses/slogert-id/
  - prefix: id
    uri: http://w3id.org/sepses/id/
